<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:reg="http://www.dangdang.com/schema/ddframe/reg"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.dangdang.com/schema/ddframe/reg http://www.dangdang.com/schema/ddframe/reg/reg.xsd
       http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.2.xsd "
       default-autowire="byName" default-lazy-init="false">

    <context:component-scan base-package="com.arto"/>

    <context:property-placeholder location="classpath:*.properties" />

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${postgres.db.url}" />
        <property name="username" value="${postgres.db.username}" />
        <property name="password" value="${postgres.db.password}" />
        <property name="maxActive" value="${postgres.db.maxActive}" />
        <property name="initialSize" value="${postgres.db.initialSize}" />
        <property name="maxWait" value="${postgres.db.maxWait}" />
        <property name="minIdle" value="${postgres.db.minIdle}" />
        <property name="timeBetweenEvictionRunsMillis" value="${postgres.db.timeBetweenEvictionRunsMillis}" />
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="${postgres.db.validationQuery}" />
        <property name="testWhileIdle" value="${postgres.db.testWhileIdle}" />
        <property name="testOnBorrow" value="${postgres.db.testOnBorrow}" />
        <property name="testOnReturn" value="${postgres.db.testOnReturn}" />
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="50" />
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate" abstract="false">
        <constructor-arg ref="dataSource" />
    </bean>

    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>


    <import resource="pergesa-event.xml" />

    <jms:listener-container connection-factory="pooledConnectionFactory"
                            concurrency="3" task-executor="jmsReceiveTaskExecutor"
                            prefetch="5" acknowledge="transacted">
        <jms:listener destination="queue.admin.pushmsg.instant?consumer.prefetchSize=5" ref="queuePushmsgInstantListenerAdapter"/>
    </jms:listener-container>
</beans>